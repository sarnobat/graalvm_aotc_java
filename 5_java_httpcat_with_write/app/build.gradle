/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.5.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'org.graalvm.buildtools.native' version '0.9.13'
}

repositories {
    mavenCentral()
}

applicationDefaultJvmArgs = ["-J-Xmx10G -J-Xms5G"]


dependencies {

	implementation 'jakarta.activation:jakarta.activation-api:1.2.2'
	implementation 'jakarta.xml.bind:jakarta.xml.bind-api:2.3.3'
	implementation 'org.glassfish.hk2:hk2-locator:2.6.1'
	implementation 'org.glassfish.jersey.containers:jersey-container-grizzly2-http:2.36'
	implementation 'org.glassfish.jersey.containers:jersey-container-jdk-http:2.36'
	implementation 'org.glassfish.jersey.core:jersey-common:2.36'
	implementation 'org.glassfish.jersey.inject:jersey-hk2:2.36'
	implementation 'org.osgi:org.osgi.framework:1.10.0'
	implementation group: 'org.json', name: 'json', version: '20220320'
	implementation 'commons-io:commons-io:2.11.0'
	implementation 'commons-cli:commons-cli:1.5.0'


    implementation fileTree(include: ['*.jar'], dir: 'libs')

}

application {
    // Define the main class for the application.
    mainClass = 'com.HttpCatWithWrite'
}

jar {
   from {
    configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) }
  }
  duplicatesStrategy = DuplicatesStrategy.EXCLUDE
  manifest.attributes["Main-Class"] = 'com.HttpCatWithWrite'
}

graalvmNative {
    agent {
        defaultMode = "standard"

        modes {
            conditional {
                userCodeFilterPath = "user-code-filter.json"
            }
        }

        metadataCopy {
            mergeWithExisting = true
            inputTaskNames.add("test")
            outputDirectories.add("build/native/metadataCopyTest")
        }
    }
    binaries {
        main {
            // Main options

            // Advanced options
            buildArgs.add('-H:EnableURLProtocols=http,https') // Passes '-H:Extra' to the native image builder options. This can be used to pass parameters which are not directly supported by this extension
            buildArgs.add('--initialize-at-build-time=org.glassfish.jersey.client.internal.HttpUrlConnector')
            buildArgs.add('-H:+ReportExceptionStackTraces')
            buildArgs.add('--no-fallback')
            buildArgs.add('-H:Name=httpcatpure')
            buildArgs.add('--report-unsupported-elements-at-runtime')
            buildArgs.add('-J--add-modules')
            buildArgs.add('-JALL-SYSTEM')
            //buildArgs.add('-J-Xmx10G')
            //buildArgs.add('-J-Xms5G')
    
            // Runtime options
            runtimeArgs.add('--help') // Passes '--help' to built image, during "nativeRun" task

        }
        test {
            verbose = true
        }
    }
}
